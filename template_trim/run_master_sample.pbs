#!/bin/bash                             

#PBS -l nodes=1:ppn=24,mem=60gb,walltime=25:00:00
#PBS -m abe
#PBS -M sample_email@umn.edu
#PBS -N sample_name
#PBS -W group_list=thyagara
#PBS -A thyagara

#  newgrp - thyagara

working_dir=sample_path
working_dirS=sample_path/sample_name
script_path=scripts_location
# table_path=tables_path
MYSQL_LOAD_WAIT=120
code_src=code_path
g7=$(basename $working_dirS)
working_dir_g7=${working_dir}/${g7}g7

g6=$(basename $working_dirS)
working_dir_g6=${working_dir}/${g6}g6

g5=$(basename $working_dirS)
working_dir_g5=${working_dir}/${g5}g5

g4=$(basename $working_dirS)
working_dir_g4=${working_dir}/${g4}g4

g3=$(basename $working_dirS)
working_dir_g3=${working_dir}/${g3}g3

g2=$(basename $working_dirS)
working_dir_g2=${working_dir}/${g2}g2

g1=$(basename $working_dirS)
working_dir_g1=${working_dir}/${g1}g1

cd $working_dir

# Load modules
# module load parallel
# module load bwa/0.7.12_gcc-4.9.2_haswell/bwa
# module load bowtie2/2.2.4_gcc-4.9.2_haswell
# module load picard/1.140
# module load picard
# module load samtools/1.2_gcc-4.9.2_haswell
# module load R/3.1.1
# module load bedtools/2.25.0/bin/bedtools
# module load python/2.7.5
# PYTHONPATH=/soft/python/2.7.1/lib/python2.7/site-packages
# export PYTHONPATH=/soft/python/2.7.5/lib/python2.7/site-packages:$PYTHONPATH
# LD_LIBRARY_PATH=/soft/python/2.7.1/lib
# export LD_LIBRARY_PATH=/soft/python/2.7.5/lib:$LD_LIBRARY_PATH

_now=$(date +"%Y-%m-%d_%H-%M")


ls -1 $working_dir/completed.txt > /dev/null 2>&1
if [ "$?" = "0" ]; then
    echo "$working_dir/completed.txt exists"
else
    echo "Started a new run on $_now" >> $working_dir/completed.txt
fi

echo ${_now} >> $working_dir/time_check
timecheck=`(date +"Date: %Y-%m-%d Time %H:%M:%S")`;
# echo ${timecheck} >> $working_dir/time_check


   echo "sh ${working_dir}/control_pileup.sh" > ${working_dir}/MappingCommands
   echo "sh ${working_dir}/sample_pileup.sh" >> ${working_dir}/MappingCommands
   parallel -j 2 --joblog ${working_dir}/mapping_jobs_log < MappingCommands 
   wait;
  
   ln -s ${working_dir}/*.bam $working_dir_g7/
   ln -s ${working_dir}/*.bam $working_dir_g6/    
   ln -s ${working_dir}/*.bam $working_dir_g5/
   ln -s ${working_dir}/*.bam $working_dir_g4/
   ln -s ${working_dir}/*.bam $working_dir_g3/
   ln -s ${working_dir}/*.bam $working_dir_g2/  
   ln -s ${working_dir}/*.bam $working_dir_g1/
  
   cp ${working_dir/*_t $working_dir_g7/
   cp ${working_dir/*_t $working_dir_g6/
   cp ${working_dir/*_t $working_dir_g5/
   cp ${working_dir/*_t $working_dir_g4/
   cp ${working_dir/*_t $working_dir_g3/
   cp ${working_dir/*_t $working_dir_g2/
   cp ${working_dir/*_t $working_dir_g1/
   
  echo "Mapping done and bam and _t files linked and copied to 7 groups" >> $working_dir/completed.txt


# grep "installed_mysql" $working_dir/completed.txt > /dev/null 2>&1
# if [ "$?" = "0" ]; then
#    echo "MySQL already installed"
# else
# Untar MySQL source
#    mkdir src
#    cd src
#    tar xzvf $code_src/mysql-5.6.24-linux-glibc2.5-x86_64.tar.gz
# Setup the mysql data directory install
#    mkdir $working_dir/mysql
#    cd $working_dir/src/mysql-5.6.24-linux-glibc2.5-x86_64/support-files
#    cp $code_src/my.cnf my-default.cnf
#    cd ..
#    rm -rf *.cnf
#    ./scripts/mysql_install_db -datadir=$working_dir/mysql/data
#    if [[ $? -ne 0 ]] ; then
#        echo "MySQL installation failed" >&2
#        exit 1
#    else
#        cd $working_dir
#        echo "installed_mysql" >> $working_dir/completed.txt
#    fi
# fi

# echo -n "Finished Mysql install " >> $working_dir/time_check
# timecheck=`(date +"%Y-%m-%d [ %H:%M:%S ]")`;
# echo ${timecheck} >> $working_dir/time_check


# Alter PATH variable to know of mysql executables
# export PATH=$working_dir/bin:$working_dir/src/mysql-5.6.24-linux-glibc2.5-x86_64/bin:$PATH
# BASE=$working_dir/mysql
# mysql_socket=$BASE/thesock


# mysqld --innodb-buffer-pool-size=40G --key-buffer-size=15G --innodb-log-file-size=5G \
# --innodb_flush_log_at_trx_commit=2 --basedir=$BASE --datadir=$BASE/data --log-error=$BASE/data/mysql.err \
# --pid-file=$BASE/mysql.pid --socket=$BASE/thesock --port=3306 --connect-timeout=30 \
# --lc-messages-dir=$working_dir/src/mysql-5.6.24-linux-glibc2.5-x86_64/share/english --tmpdir=/scratch &


 # sleep $MYSQL_LOAD_WAIT


### Run the 7 groups via parallel here

echo "Running each group via GNU Parallel" 

echo "sh ${working_dir_g7}/run_cnv_wrapper_${g7}g7.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g6}/run_cnv_wrapper_${g6}g6.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g5}/run_cnv_wrapper_${g5}g5.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g4}/run_cnv_wrapper_${g4}g4.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g3}/run_cnv_wrapper_${g3}g3.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g2}/run_cnv_wrapper_${g2}g2.sh" >> ${working_dir}/RunGroupCommands
echo "sh ${working_dir_g1}/run_cnv_wrapper_${g1}g1.sh" >> ${working_dir}/RunGroupCommands

parallel -j +0 --joblog ${working_dir}/group_jobs_log < ${working_dir}/RunGroupCommands
wait # would this hangs?  

# echo "Shutdown MySQL"
# mysqladmin --socket=$BASE/thesock shutdown -u root  
